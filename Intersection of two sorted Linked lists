/* Node of a linked list
 class Node {
   int data;
    Node next;
    Node(int d)  { data = d;  next = null; }
}
*/

class Solution
{
   public static Node findIntersection(Node head1, Node head2)
    {
        Node dummy = new Node(0); // Dummy node to represent the head of the result linked list
        Node current = dummy; // Pointer to the current node in the result linked list

        // Traverse both linked lists
        while (head1 != null && head2 != null) {
            if (head1.data == head2.data) {
                // If the current nodes in both lists are equal, add the node to the result list
                current.next = new Node(head1.data);
                current = current.next;
                head1 = head1.next;
                head2 = head2.next;
            } else if (head1.data < head2.data) {
                // Move the pointer of the list with the smaller element
                head1 = head1.next;
            } else {
                head2 = head2.next;
            }
        }

        return dummy.next; // Return the head of the result list (excluding the dummy node)
    }

    // Utility function to print a linked list
    public static void printList(Node head) {
        while (head != null) {
            System.out.print(head.data + " ");
            head = head.next;
        }
        System.out.println();
    }

    public static void main(String[] args) {
        // Example 1:
        Node head1 = new Node(1);
        head1.next = new Node(2);
        head1.next.next = new Node(3);
        head1.next.next.next = new Node(4);
        head1.next.next.next.next = new Node(6);

        Node head2 = new Node(2);
        head2.next = new Node(4);
        head2.next.next = new Node(6);
        head2.next.next.next = new Node(8);

        System.out.println("Example 1:");
        System.out.print("Input List 1: ");
        printList(head1);
        System.out.print("Input List 2: ");
        printList(head2);

        Node result1 = findIntersection(head1, head2);
        System.out.print("Output: ");
        printList(result1);

        // Example 2:
        Node head3 = new Node(10);
        head3.next = new Node(20);
        head3.next.next = new Node(40);
        head3.next.next.next = new Node(50);

        Node head4 = new Node(15);
        head4.next = new Node(40);

        System.out.println("\nExample 2:");
        System.out.print("Input List 1: ");
        printList(head3);
        System.out.print("Input List 2: ");
        printList(head4);

        Node result2 = findIntersection(head3, head4);
        System.out.print("Output: ");
        printList(result2);

    }
}
